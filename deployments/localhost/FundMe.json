{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedParam",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumusd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0c55561f5f80daec81e33e479976b171e282607a7966e177edbc5ff839080f88",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "853957",
    "logsBloom": "0x
    "blockHash": "0xbbd92791b19c17daba1c2334d554c1dfe3b5275b2b3f69e10b3ad30a0a889bee",
    "transactionHash": "0x0c55561f5f80daec81e33e479976b171e282607a7966e177edbc5ff839080f88",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "853957",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e3625347be586bf090136801a5ae8b4e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedParam\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumusd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Djibril mugisho\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is a simple demo of a fund me contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\npragma solidity ^0.8.0;\\n\\nerror FundMe_NotOwner();\\n\\n/**\\n * @title A contract for crowd funding \\n * @author Djibril mugisho\\n * @notice This contract is a simple demo of a fund me contract\\n * @dev \\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    uint256 public constant minimumusd = 50 * 1e18; //=10 ** 18\\n    address[] public funders;\\n    mapping(address => uint256) public addressAmountFunded;\\n    address immutable owner;\\n    AggregatorV3Interface public priceFeed;\\n  \\n    constructor(address priceFeedParam) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedParam);\\n    }\\n\\n    //Register the funder in case they send fund directly to the contract address, with this approach users should consider or must specify the fallback function.\\n    receive() external payable {\\n        fund();\\n     }\\n\\n    //Register the funder in case they  fund funds directly to the contract and don't specify the fallback function(very important).\\n     fallback() external payable {\\n        fund();\\n      }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= 0, \\\"No enough!\\\"); //1e18 == 1 * 10 ^ 18\\n        funders.push(msg.sender);\\n        addressAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        require(\\n            msg.sender == owner,\\n            \\\"Dont' have access to withdraw funds, only contract owner is allowed.\\\"\\n        );\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\"); //send money to  ;\\n\\n        require(callSuccess, \\\"Transaction failed\\\");\\n        //clear all funders afer withdrawing the money\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex = funderIndex + 1\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressAmountFunded[funder] = 100;\\n        }\\n\\n        funders = new address[](0);\\n    }\\n\\n\\n\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) {\\n            revert FundMe_NotOwner();\\n        }\\n        // require(\\n        //     msg.sender == owner,\\n        //     \\\"Dont' have access to withdraw funds, only contract owner is allowed.\\\"\\n        // );\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xb4059443e9aa052083a912ad18a831f0e32acb20cbcdf45e44f26051a84ae548\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal \\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal  view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10); //eth amount * 1*10^10 =\\n    }\\n\\n    function getVersion() internal view   returns (uint256) {\\n        AggregatorV3Interface priceFeedConsumerContract = AggregatorV3Interface(\\n            0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        );\\n        return priceFeedConsumerContract.version();\\n    }\\n} \\n\",\"keccak256\":\"0x48fd7ea320a45c4c43f80b9f03d309745c31ae23df0c164caed9bc34b2e1dd13\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f71380380610f7183398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610e1261015f6000396000818161029301526103180152610e126000f3fe6080604052600436106100595760003560e01c80630848e25a146100725780633ccfd60b1461009d578063741bef1a146100b4578063b60d4288146100df578063ba044c10146100e9578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610284565b604051610094919061076a565b60405180910390f35b3480156100a957600080fd5b506100b2610291565b005b3480156100c057600080fd5b506100c9610560565b6040516100d69190610804565b60405180910390f35b6100e7610163565b005b3480156100f557600080fd5b50610110600480360381019061010b9190610862565b610586565b60405161011d919061076a565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906108bb565b61059e565b60405161015a91906108f7565b60405180910390f35b600061019a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105dd90919063ffffffff16565b10156101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061096f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610a27565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516103ca90610a78565b60006040518083038185875af1925050503d8060008114610407576040519150601f19603f3d011682016040523d82523d6000602084013e61040c565b606091505b5050905080610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790610ad9565b60405180910390fd5b60005b6000805490508110156104fc57600080828154811061047557610474610af9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506064600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816104f59190610b57565b9050610453565b50600067ffffffffffffffff81111561051857610517610b8b565b5b6040519080825280602002602001820160405280156105465781602001602082028036833780820191505090505b506000908051906020019061055c9291906106aa565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600081815481106105ae57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e983610619565b90506000670de0b6b3a764000082866106029190610bba565b61060c9190610c2b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610ce9565b5050509150506402540be400816106a29190610d64565b915050919050565b828054828255906000526020600020908101928215610723579160200282015b828111156107225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ca565b5b5090506107309190610734565b5090565b5b8082111561074d576000816000905550600101610735565b5090565b6000819050919050565b61076481610751565b82525050565b600060208201905061077f600083018461075b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ca6107c56107c084610785565b6107a5565b610785565b9050919050565b60006107dc826107af565b9050919050565b60006107ee826107d1565b9050919050565b6107fe816107e3565b82525050565b600060208201905061081960008301846107f5565b92915050565b600080fd5b600061082f82610785565b9050919050565b61083f81610824565b811461084a57600080fd5b50565b60008135905061085c81610836565b92915050565b6000602082840312156108785761087761081f565b5b60006108868482850161084d565b91505092915050565b61089881610751565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d061081f565b5b60006108df848285016108a6565b91505092915050565b6108f181610824565b82525050565b600060208201905061090c60008301846108e8565b92915050565b600082825260208201905092915050565b7f4e6f20656e6f7567682100000000000000000000000000000000000000000000600082015250565b6000610959600a83610912565b915061096482610923565b602082019050919050565b600060208201905081810360008301526109888161094c565b9050919050565b7f446f6e742720686176652061636365737320746f20776974686472617720667560008201527f6e64732c206f6e6c7920636f6e7472616374206f776e657220697320616c6c6f60208201527f7765642e00000000000000000000000000000000000000000000000000000000604082015250565b6000610a11604483610912565b9150610a1c8261098f565b606082019050919050565b60006020820190508181036000830152610a4081610a04565b9050919050565b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f5472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000610ac3601283610912565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6282610751565b9150610b6d83610751565b9250828201905080821115610b8557610b84610b28565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610bc582610751565b9150610bd083610751565b9250828202610bde81610751565b91508282048414831517610bf557610bf4610b28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c3682610751565b9150610c4183610751565b925082610c5157610c50610bfc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c7b81610c5c565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b6000819050919050565b610cb181610c9e565b8114610cbc57600080fd5b50565b600081519050610cce81610ca8565b92915050565b600081519050610ce38161088f565b92915050565b600080600080600060a08688031215610d0557610d0461081f565b5b6000610d1388828901610c89565b9550506020610d2488828901610cbf565b9450506040610d3588828901610cd4565b9350506060610d4688828901610cd4565b9250506080610d5788828901610c89565b9150509295509295909350565b6000610d6f82610c9e565b9150610d7a83610c9e565b9250828202610d8881610c9e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc057610dbf610b28565b5b8282058414831517610dd557610dd4610b28565b5b509291505056fea26469706673582212204aca2a303685f3120860e5dcd5fb58aae4b2ba2ca2eec249564a3ff74fbaf08164736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630848e25a146100725780633ccfd60b1461009d578063741bef1a146100b4578063b60d4288146100df578063ba044c10146100e9578063dc0d3dff1461012657610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b50610087610284565b604051610094919061076a565b60405180910390f35b3480156100a957600080fd5b506100b2610291565b005b3480156100c057600080fd5b506100c9610560565b6040516100d69190610804565b60405180910390f35b6100e7610163565b005b3480156100f557600080fd5b50610110600480360381019061010b9190610862565b610586565b60405161011d919061076a565b60405180910390f35b34801561013257600080fd5b5061014d600480360381019061014891906108bb565b61059e565b60405161015a91906108f7565b60405180910390f35b600061019a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105dd90919063ffffffff16565b10156101db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d29061096f565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90610a27565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16476040516103ca90610a78565b60006040518083038185875af1925050503d8060008114610407576040519150601f19603f3d011682016040523d82523d6000602084013e61040c565b606091505b5050905080610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790610ad9565b60405180910390fd5b60005b6000805490508110156104fc57600080828154811061047557610474610af9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506064600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816104f59190610b57565b9050610453565b50600067ffffffffffffffff81111561051857610517610b8b565b5b6040519080825280602002602001820160405280156105465781602001602082028036833780820191505090505b506000908051906020019061055c9291906106aa565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600081815481106105ae57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105e983610619565b90506000670de0b6b3a764000082866106029190610bba565b61060c9190610c2b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190610ce9565b5050509150506402540be400816106a29190610d64565b915050919050565b828054828255906000526020600020908101928215610723579160200282015b828111156107225782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ca565b5b5090506107309190610734565b5090565b5b8082111561074d576000816000905550600101610735565b5090565b6000819050919050565b61076481610751565b82525050565b600060208201905061077f600083018461075b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ca6107c56107c084610785565b6107a5565b610785565b9050919050565b60006107dc826107af565b9050919050565b60006107ee826107d1565b9050919050565b6107fe816107e3565b82525050565b600060208201905061081960008301846107f5565b92915050565b600080fd5b600061082f82610785565b9050919050565b61083f81610824565b811461084a57600080fd5b50565b60008135905061085c81610836565b92915050565b6000602082840312156108785761087761081f565b5b60006108868482850161084d565b91505092915050565b61089881610751565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b6000602082840312156108d1576108d061081f565b5b60006108df848285016108a6565b91505092915050565b6108f181610824565b82525050565b600060208201905061090c60008301846108e8565b92915050565b600082825260208201905092915050565b7f4e6f20656e6f7567682100000000000000000000000000000000000000000000600082015250565b6000610959600a83610912565b915061096482610923565b602082019050919050565b600060208201905081810360008301526109888161094c565b9050919050565b7f446f6e742720686176652061636365737320746f20776974686472617720667560008201527f6e64732c206f6e6c7920636f6e7472616374206f776e657220697320616c6c6f60208201527f7765642e00000000000000000000000000000000000000000000000000000000604082015250565b6000610a11604483610912565b9150610a1c8261098f565b606082019050919050565b60006020820190508181036000830152610a4081610a04565b9050919050565b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f5472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000610ac3601283610912565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b6282610751565b9150610b6d83610751565b9250828201905080821115610b8557610b84610b28565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000610bc582610751565b9150610bd083610751565b9250828202610bde81610751565b91508282048414831517610bf557610bf4610b28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c3682610751565b9150610c4183610751565b925082610c5157610c50610bfc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c7b81610c5c565b8114610c8657600080fd5b50565b600081519050610c9881610c72565b92915050565b6000819050919050565b610cb181610c9e565b8114610cbc57600080fd5b50565b600081519050610cce81610ca8565b92915050565b600081519050610ce38161088f565b92915050565b600080600080600060a08688031215610d0557610d0461081f565b5b6000610d1388828901610c89565b9550506020610d2488828901610cbf565b9450506040610d3588828901610cd4565b9350506060610d4688828901610cd4565b9250506080610d5788828901610c89565b9150509295509295909350565b6000610d6f82610c9e565b9150610d7a83610c9e565b9250828202610d8881610c9e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610dc057610dbf610b28565b5b8282058414831517610dd557610dd4610b28565b5b509291505056fea26469706673582212204aca2a303685f3120860e5dcd5fb58aae4b2ba2ca2eec249564a3ff74fbaf08164736f6c63430008180033",
  "devdoc": {
    "author": "Djibril mugisho",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding ",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is a simple demo of a fund me contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 332,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 337,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}